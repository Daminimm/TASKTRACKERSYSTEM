@model TASKTRACKERSYSTEM.Models.TASK
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@if (ViewBag.Message != null)
{
    <p class="alert alert-success" role="alert">
        @ViewBag.Message
    </p>

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <p class="form-horizontal">
    <p>EMPLOYE</p>
    <hr />
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <p class="form-group">
        @Html.LabelFor(model => model.TASKNAME , htmlAttributes: new { @class = "control-label col-md-2" })
    <p class="col-md-10">
        @Html.EditorFor(model => model.TASKNAME)
        @Html.ValidationMessageFor(model => model.TASKNAME, "", new { @class = "text-danger" })

    </p>
    </p>
    <p class="form-group">
        @Html.Label("ASSIGNEDTO ", htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.DropDownList("ASSIGNEDTO", (List<SelectListItem>)ViewBag.UserList, "Select User")


    <p class="col-md-10">
        @Html.ValidationMessageFor(model => model.ASSIGNEDTO, "", new { @class = "text-danger" })
    </p>
    </p>
    <p class="form-group">
        @Html.LabelFor(model => model.DUETO, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.DUETO, new { htmlAttributes = new { @class = "datepicker", type = "date" } })
        <script>
            $(document).ready(function () {
                $(".datepicker").datepicker({
                    //dateFormat: "dd-mm-yy",
                    dateFormat: "dd/M/yy",
                    changeMonth: true,
                    changeYear: true,
                    minDate: new Date(2023, 10 - 1, 25),// Disable past dates
                    
                    maxDate: "+1Y" // Allow dates up to 1 year in the future
                   


                });
            });
       </script>
<p class="col-md-10">


        @Html.ValidationMessageFor(model => model.DUETO, "", new { @class = "text-danger" })

    </p>
    </p>
    <p class="form-group">
        @Html.LabelFor(model => model.STATUS, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EnumDropDownListFor(model => model.StatusEnum)


    </p>

    <p class="form-group">
    <p class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-default" />
    </p>
    </p>
    </p>
}
<p>
    @Html.ActionLink("Back to List", "Index")
</p>


